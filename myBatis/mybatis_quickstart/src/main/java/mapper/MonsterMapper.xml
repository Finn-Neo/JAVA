<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="mapper.MonsterMapper">
    <!--
    useGeneratedKeys
        （仅适用于 insert 和 update）
        这会令 MyBatis 使用 JDBC 的 getGeneratedKeys 方法来取出由数据库内部生成的主键
        （比如：像 MySQL 和 SQL Server 这样的关系型数据库管理系统的自动递增字段），
        默认值：false。
    keyProperty
        （仅适用于 insert 和 update）
        指定能够唯一识别对象的属性，
        MyBatis 会使用 getGeneratedKeys 的返回值或 insert 语句的 selectKey 子元素设置它的值，
        默认值：未设置（unset）。
        如果生成列不止一个，可以用逗号分隔多个属性名称。
    -->
    <insert id="addMonster" parameterType="Monster" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `monster`
        (`age`, `birthday`, `email`, `gender`, `name`, `salary`)
        VALUES (#{age}, #{birthday}, #{email}, #{gender}, #{name}, #{salary});
    </insert>
    
    <delete id="deleteMonster" parameterType="Integer">
        DELETE FROM `monster` WHERE id = #{id};
    </delete>
    
    <update id="updateMonster" parameterType="Monster">
        UPDATE `monster`
        set `age`=#{age}, birthday=#{birthday}, email=#{email},
        gender=#{gender}, name=#{name}, salary=#{salary}
        where id=#{id};
    </update>
    
    <select id="getMonsterById" parameterType="Integer" resultType="Monster">
        select * from `monster` where id = #{id};
    </select>
    
    <!--如果返回集合，应该写成集合包含的类型，而不是集合本身的类型-->
    <select id="getAllMonsters" resultType="Monster">
        select * from `monster`;
    </select>
</mapper>